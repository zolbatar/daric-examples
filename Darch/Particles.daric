OPTION BASE 1
Import "Render"

Record Particle 
    active%:INT
    x:FLOAT
    y:FLOAT
    z:FLOAT
    dx:FLOAT
    dy:FLOAT
    dz:FLOAT
    die%:INT
    shape%:INT
    tt%:INT
End Record
Dim particles:Particle[250]
Const max_particles%=250
Const part_variants%=50
Dim cube_shapes%:Int[50]
Dim cube_shapes_engines%:Int[50]
cube_shapes_gym%=0

Def CreateParticleCube(col:INT)
    Vertex -0.5,  0.5,  0.5
    Vertex  0.5,  0.5,  0.5
    Vertex  0.5, -0.5,  0.5
    Vertex -0.5, -0.5,  0.5
    Vertex -0.5,  0.5, -0.5
    Vertex  0.5,  0.5, -0.5
    Vertex  0.5, -0.5, -0.5
    Vertex -0.5, -0.5, -0.5
	FaceColour 3, 1, 0, col:FaceColour 3, 2, 1, col:REM Front
    FaceColour 5, 6, 7, col:FaceColour 5, 7, 4, col:REM Back
	FaceColour 3, 7, 6, col:FaceColour 3, 6, 2, col:REM Top
	FaceColour 4, 0, 1, col:FaceColour 5, 1, 4, col:REM Bottom
	FaceColour 4, 7, 3, col:FaceColour 4, 3, 0, col:REM Left
	FaceColour 1, 2, 6, col:FaceColour 1, 6, 5, col:REM Right
End Def

Def InitParticles()
    For I%=1 To part_variants%
        col%=Colour(Rnd(192)+63,Rnd(192)+63,0)
        CreateParticleCube(col%)
        cube_shapes_engines%[I%]=Shape()

        col%=Colour(Rnd(192)+63,Rnd(192)+63,Rnd(192)+63)
        CreateParticleCube(col%)
        cube_shapes%[I%]=Shape()
    Next

    col%=Colour(255,255,255)
    CreateParticleCube(col%)
    cube_shapes_gym%=Shape()

    For I%=1 To max_particles%
        particles[I%].active%=0
    Next
End Def

Def CreateRandomParticle(x:FLOAT,y:FLOAT,z:FLOAT,dx:FLOAT,dy:FLOAT,dz:FLOAT,r%:INT,tt%:INT)
    t#=Timer()
    For I%=1 To max_particles%
        If particles[I%].active%=0 Then
            particles[I%].active%=1
            particles[I%].x=x*scale_x
            particles[I%].y=y
            particles[I%].z=z*scale_z
            particles[I%].dx=dx
            particles[I%].dy=dy
            particles[I%].dz=dz
            particles[I%].die%=t#+Rnd(r%)+10
            particles[I%].tt%=tt%
            Case tt% OF
            When 0:particles[I%].shape%=cube_shapes_engines%[Rnd(part_variants%)+1]
            When 1:particles[I%].shape%=cube_shapes%[Rnd(part_variants%)+1]
            When 2:particles[I%].shape%=cube_shapes_gym%
            End Case
            Return
        End If
    Next
End Def

Def RenderParticles(x:FLOAT,z:FLOAT,tt:FLOAT,height:INT)
    t#=Timer()
    For I%=1 To max_particles%
        If particles[I%].active%=1 Then
            xx=(x*scale_x)-particles[I%].x
            zz=particles[I%].z-(z*scale_z)
            yy=particles[I%].y
            Case particles[I%].tt% OF
            When 0:Object(particles[I%].shape%,xx,yy,zz+50, 0,0,0, 0.1, 0)
            When 1:Object(particles[I%].shape%,xx,yy,zz+50, 0,0,0, 0.25, 0)
            Otherwise:Object(particles[I%].shape%,xx,yy,zz+50, 0,0,0, 0.15, 0)
            End Case

            REM Animate
            particles[I%].y=particles[I%].y+(particles[I%].dy*tt)-(2.5*tt)
            If particles[I%].tt%=2 particles[I%].y=particles[I%].y-(5.0*tt)
            particles[I%].x=particles[I%].x+(particles[I%].dx*tt)
            particles[I%].z=particles[I%].z+(particles[I%].dz*tt)

            REM Impact
            fx=Int(Floor(particles[I%].x))
            fz=Int(Floor(particles[I%].z))
            If CheckCollision(fx,fz,particles[I%].y,height)=1 particles[I%].active%=0

            REM Kill?
            If particles[I%].die% < t# Then
                particles[I%].active%=0
            End If
        End If
    Next
End Def